events { }

http {
  include mime.types;
  # See https://docs.galaxyproject.org/en/latest/admin/nginx.html#serving-galaxy-at-the-web-server-root

  # compress responses whenever possible
  gzip on;
  gzip_http_version 1.1;
  gzip_vary on;
  gzip_comp_level 6;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_buffers 16 8k;

  # allow up to 3 minutes for Galaxy to respond to slow requests before timing out
  uwsgi_read_timeout {{ NGINX_UWSGI_READ_TIMEOUT | default(180, true) }};

  # maximum file upload size
  client_max_body_size 10g;

  {% if IRIDA_ENABLED | default %}
  {% if IRIDA_SSL_ENABLED | default %}
  # this is for IRIDA

  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;

    location / {
        return 302 https://$host$request_uri;
    }
  }
  {% endif %}

  server {
    server_name _;
    {% if IRIDA_SSL_ENABLED | default %}
    listen        *:443 ssl default_server;

    # Allowable SSL protocols
    ssl_protocols TLSv1.2 TLSv1.3;

    # Use secure ciphers
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256;
    ssl_dhparam /etc/nginx/dhparams.pem;
    ssl_prefer_server_ciphers on;

    # Enable session reuse
    ssl_session_cache shared:SSL:8m;
    ssl_session_timeout 5m;

    # Cert/Key
    ssl_certificate /etc/nginx/fullchain.pem;
    ssl_certificate_key /etc/nginx/privkey.pem;
    {% else %}
    listen 80 default_server;
    listen [::]:80 default_server;
    {% endif %}

    proxy_read_timeout 600;
    proxy_connect_timeout 600;
    proxy_send_timeout 600; 

    location / {
          proxy_set_header X-Forwarded-Host $host;
          proxy_set_header X-Forwarded-Server $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_pass http://irida-web:8080;
    }    
  }
  {% endif %}

  server {
    listen {%if IRIDA_ENABLED %} 90 {% else %} 80 {% endif %} default_server;
    listen [::]:{%if IRIDA_ENABLED %}90{% else %}80{% endif %} default_server;
    server_name _;

    # use a variable for convenience
    set $galaxy_static /export/galaxy/static;
    set $galaxy_root /export/galaxy;


    # proxy all requests not matching other locations to uWSGI
    location /{{ GALAXY_PROXY_PREFIX | regex_replace("^/", "") | regex_replace("/$", "") }} {
      uwsgi_pass galaxy-server:5555;
      include uwsgi_params;
      uwsgi_param UWSGI_SCHEME /{{ GALAXY_PROXY_PREFIX | regex_replace("^/", "") | regex_replace("/$", "") }};
    }

    # serve framework static content
    location {{ GALAXY_PROXY_PREFIX | regex_replace("/$", "") }}/static {
      alias $galaxy_static;
      expires 24h;
    }
    location {{ GALAXY_PROXY_PREFIX | regex_replace("/$", "") }}/robots.txt {
      alias $galaxy_static/robots.txt;
      expires 24h;
    }
    location {{ GALAXY_PROXY_PREFIX | regex_replace("/$", "") }}/favicon.ico {
      alias $galaxy_static/favicon.ico;
      expires 24h;
    }

    # serve visualization and interactive environment plugin static content
    location ~ ^{{ GALAXY_PROXY_PREFIX | regex_replace("/$", "") }}/plugins/(?<plug_type>.+?)/(?<vis_name>.+?)/static/(?<static_file>.*?)$ {
      alias $galaxy_root/config/plugins/$plug_type/$vis_name/static/$static_file;
      expires 24;
    }

    rewrite ^/{{ GALAXY_PROXY_PREFIX | regex_replace("^/", "") | regex_replace("/$", "") }}$ /{{ GALAXY_PROXY_PREFIX | regex_replace("^/", "") | regex_replace("/$", "") }}/ last;
  }
}
